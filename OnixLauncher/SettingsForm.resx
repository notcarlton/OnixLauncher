<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="CloseButton.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>